appId: com.deepfocus.app
productName: Deep Focus
directories:
  output: dist
  buildResources: build
files:
  - 'out/**/*'
  - 'package.json'
extraResources:
  - from: '.env'
    to: '.env'
  - from: './resources/icon_blue.png'
    to: 'resources/icon_blue.png'
  - from: './resources/icon_green.png'
    to: 'resources/icon_green.png'
  - from: './resources/icon_red.png'
    to: 'resources/icon_red.png'
  - from: './resources/icon_yellow.png'
    to: 'resources/icon_yellow.png'
  - from: './resources/icon.png'
    to: 'resources/icon.png'

asar: true
asarUnpack:
  - 'resources/**'
  - 'node_modules/@deepfocus/get-windows'
  - 'node_modules/node-mac-permissions'

mac:
  entitlements: build/entitlements.mac.plist 
  entitlementsInherit: build/entitlements.mac.plist
  hardenedRuntime: true  # Enable hardened runtime for macOS builds
  extendInfo:
    NSCameraUsageDescription: Application requests access to the device's camera.
    NSMicrophoneUsageDescription: Application requests access to the device's microphone.
    NSDocumentsFolderUsageDescription: Application requests access to the user's Documents folder.
    NSDownloadsFolderUsageDescription: Application requests access to the user's Downloads folder.
    NSAppleEventsUsageDescription: Please allow access to script browser applications to detect the current URL when triggering instant lookup.
    NSCalendarsUsageDescription: Application needs access to calendars for productivity scheduling.
    NSScreenCaptureUsageDescription: Application needs access to capture the screen for productivity monitoring.
    NSAccessibilityUsageDescription: Application requires access to accessibility features to track and monitor window titles.
  category: 'public.app-category.productivity'  # Optional: Set a category for the Mac App Store
  notarize: true # Ensure that the application gets notarized for macOS

dmg:
  artifactName: '${name}-${version}.${ext}'  # Specify how your dmg file will be named

win:
  # Removed invalid properties like shortcutName, uninstallDisplayName, and createDesktopShortcut
  target:
    - nsis
  artifactName: '${name}-${version}-setup.${ext}'
  icon: './resources/icon.ico'

nsis:
  oneClick: false
  perMachine: true
  allowElevation: true
  allowToChangeInstallationDirectory: true
  installerIcon: './resources/icon.ico'
  uninstallerIcon: './resources/icon.ico'
  deleteAppDataOnUninstall: true
  createDesktopShortcut: true  # This should be set in the `nsis` section
  createStartMenuShortcut: true

linux:
  target:
    - AppImage
    - snap
    - deb
  maintainer: electronjs.org
  category: Utility

appImage:
  artifactName: '${name}-${version}.${ext}'

npmRebuild: false

publish:
  provider: generic
  url: https://example.com/auto-updates
